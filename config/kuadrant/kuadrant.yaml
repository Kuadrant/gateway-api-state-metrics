apiVersion: kuadrant.io/v1alpha1
kind: TLSPolicy
metadata:
  name: external
  namespace: istio-system
spec:
  targetRef:
    name: external
    group: gateway.networking.k8s.io
    kind: Gateway
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: selfsigned-cluster-issuer
status:
  conditions:
  - lastTransitionTime: "2023-08-21T22:53:08Z"
    message: Gateway is TLS Enabled
    reason: GatewayTLSEnabled
    status: "True"
    type: Ready
---
apiVersion: kuadrant.io/v1alpha1
kind: TLSPolicy
metadata:
  name: internal
  namespace: istio-system
spec:
  targetRef:
    name: internal
    group: gateway.networking.k8s.io
    kind: Gateway
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: selfsigned-cluster-issuer
status:
  conditions:
  - lastTransitionTime: "2023-08-21T22:53:08Z"
    message: Gateway is TLS Enabled
    reason: GatewayTLSEnabled
    status: "True"
    type: Ready
---
apiVersion: kuadrant.io/v1beta2
kind: RateLimitPolicy
metadata:
  name: rlp-www
spec:
  targetRef:
    group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: www
  limits:
    "global":
      rates:
      - limit: 5
        duration: 10
        unit: second
status:
  conditions:
  - lastTransitionTime: "2023-08-21T22:53:08Z"
    message: HTTPRoute is ratelimited
    reason: HTTPRouteProtected
    status: "True"
    type: Available
---
apiVersion: kuadrant.io/v1beta2
kind: RateLimitPolicy
metadata:
  name: rlp-cdn
spec:
  targetRef:
    group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: cdn
  limits:
    "global":
      rates:
      - limit: 5
        duration: 10
        unit: second
status:
  conditions:
  - lastTransitionTime: "2023-08-21T22:53:08Z"
    message: HTTPRoute is ratelimited
    reason: HTTPRouteProtected
    status: "True"
    type: Available
---
apiVersion: kuadrant.io/v1beta2
kind: AuthPolicy
metadata:
  name: dashboards-protection
spec:
  targetRef:
    group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: dashboards
  rules:
    authentication:
      "keycloak-users":
        jwt:
          issuerUrl: http://keycloak.example.com
      "k8s-service-accounts":
        kubernetesTokenReview:
          audiences:
          - https://kubernetes.example.com
        overrides:
          "sub":
            selector: auth.identity.user.username
    authorization:
      "k8s-rbac":
        kubernetesSubjectAccessReview:
          user:
            selector: auth.identity.sub
    response:
      success:
        dynamicMetadata:
          "identity":
            json:
              properties:
                "userid":
                  selector: auth.identity.sub
status:
  conditions:
  - lastTransitionTime: "2023-08-21T22:53:08Z"
    message: HTTPRoute is protected
    reason: HTTPRouteProtected
    status: "True"
    type: Available
---
apiVersion: kuadrant.io/v1beta2
kind: AuthPolicy
metadata:
  name: accounts
spec:
  targetRef:
    group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: accounts
  rules:
    authentication:
      "api-key-users":
        apiKey:
          selector:
            matchLabels:
              app: accounts
          allNamespaces: true
        credentials:
          authorizationHeader:
            prefix: APIKEY
    response:
      success:
        dynamicMetadata:
          "identity":
            json:
              properties:
                "userid":
                  selector: auth.identity.metadata.annotations.secret\.kuadrant\.io/user-id
status:
  conditions:
  - lastTransitionTime: "2023-08-21T22:53:08Z"
    message: HTTPRoute is protected
    reason: HTTPRouteProtected
    status: "True"
    type: Available